---
import Layout from "../../layouts/Layout.astro"
import CodeBlock from "../../components/CodeBlock.astro"
import PageTitle from "../../components/PageTitle.astro"
import FileName from "../../components/FileName.astro"
import SectionTitle from "../../components/SectionTitle.astro"

const contents = [
    {
        url: 'form-debug-example',
        name: 'Example'
    },
    {
        url: 'form-debug-code',
        name: 'FormDebug'
    },
    {
        url: 'form-debug-styles',
        name: 'Styles'
    }
]
---

<Layout contents={contents}>
    <PageTitle>FromDebug</PageTitle>

    <SectionTitle id="form-debug-example">Example</SectionTitle>
    <CodeBlock code={`<reactive-form>
    <div>
        <input type="text" name="name" placeholder="Name" />
        <input type="email" name="email" placeholder="Email" />
        <input type="text" name="address" placeholder="Address" />
    </div>
    <form-debug>
        <div>Name: <span data-bind-text="name"></span></div>
        <div>Email: <span data-bind-text="email"></span></div>
        <div>Address: <span data-bind-text="address"></span></div>
    </form-debug>
</reactive-form>`} lang="html" />

    <SectionTitle id="form-debug-code">FormDebug</SectionTitle>
    <FileName file="form-debug.ts" />
    <CodeBlock code={`export class FormDebug extends MiniEl {
    private consumer!: ContextConsumer<Record<string, any>>

    static styles = [ hostStyle ]

    constructor() {
        super()
        this.consumer = new ContextConsumer(this, formContext)
        this.consumer.subscribe((form, oldForm) => {
            updateBindings(this, form, oldForm)
        })
    }

    protected onDisconnect() {
        this.consumer.unsubscribe()
    }

    protected render() {
        return html\`
            <h4>Form Data</h4>
            <slot></slot>
        \`
    }
}

customElements.define('form-debug', FormDebug)`} lang="ts" />

    <SectionTitle id="form-debug-styles">Styles</SectionTitle>
    <FileName file="styles.ts" />
    <CodeBlock code={`const hostStyle = css\`
    :host {
        display: grid;
        padding: 1rem;
        background: rgba(128, 128, 128, 0.3);
        background-blend-mode: luminosity;
        backdrop-filter: blur(50px);
        border-radius: 24px;

        h4 {
            margin: 0;
        }
    }
\``} lang="ts" />
</Layout>