---
import type { ContentItem } from '../types'
const { contents } = Astro.props
const contentsTyped: ContentItem[] = contents
---

<section>
    <aside>
        <h3 data-id="contentTitle">
            <svg viewBox="0 0 24 24" width="18" height="18">
                <path fill="currentColor" d="M19,1H5C2.243,1,0,3.243,0,6v12c0,2.757,2.243,5,5,5h14c2.757,0,5-2.243,5-5V6c0-2.757-2.243-5-5-5ZM5,3h14c1.654,0,3,1.346,3,3v2H2v-2c0-1.654,1.346-3,3-3Zm14,18H5c-1.654,0-3-1.346-3-3V10H22v8c0,1.654-1.346,3-3,3ZM3,5.5c0-.828,.672-1.5,1.5-1.5s1.5,.672,1.5,1.5-.672,1.5-1.5,1.5-1.5-.672-1.5-1.5Zm4,0c0-.828,.672-1.5,1.5-1.5s1.5,.672,1.5,1.5-.672,1.5-1.5,1.5-1.5-.672-1.5-1.5Zm3.707,10.579c.391,.391,.391,1.023,0,1.414l-1.982,1.982c-.352,.352-.809,.528-1.266,.528-.441,0-.883-.164-1.23-.493l-1.163-1.103c-.401-.379-.418-1.013-.038-1.413,.38-.401,1.013-.418,1.413-.038l1.015,.96,1.838-1.838c.391-.391,1.023-.391,1.414,0Zm8.293,1.921c0,.553-.447,1-1,1h-4c-.553,0-1-.447-1-1s.447-1,1-1h4c.553,0,1,.447,1,1Zm-8.293-6.921c.391,.391,.391,1.023,0,1.414l-1.982,1.982c-.352,.352-.809,.528-1.266,.528-.441,0-.883-.164-1.23-.493l-1.163-1.103c-.401-.379-.418-1.012-.038-1.413,.38-.402,1.013-.418,1.413-.039l1.015,.96,1.838-1.838c.391-.391,1.023-.391,1.414,0Zm8.293,1.921c0,.553-.447,1-1,1h-4c-.553,0-1-.447-1-1s.447-1,1-1h4c.553,0,1,.448,1,1Z"/>
            </svg>
            <span>Contents</span>
            <svg class="arrow" viewBox="0 0 24 24" width="20" height="20">
                <path fill="currentColor" d="M10.811,18.707,9.4,17.293,14.689,12,9.4,6.707l1.415-1.414L16.1,10.586a2,2,0,0,1,0,2.828Z"/>
            </svg>
        </h3>
        <ul data-id="contentList" data-toggle="off">
            {(contents || []).map((item: ContentItem) => (
                <li>
                    <a href={`#${item.url}`} data-toc-link>{item.name}</a>
                </li>
            ))}
        </ul>
    </aside>
    <article id="mainContent">
        <slot/>
    </article>
    <footer>
        <div class="copyright">
            <span>&copy;</span>
            Tun Lin Phyo 2025.
            <strong>All rights reserved.</strong>
        </div>
        <div class="contacts">
            <a href="https://cssbattle.dev/player/tunlinphyo" target="_blank" class="custom-title" data-title="CSSBattle">
                <svg width="20" height="20" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path fill="currentColor" d="M6.2,2.44L18.1,14.34L20.22,12.22L21.63,13.63L19.16,16.1L22.34,19.28C22.73,19.67 22.73,20.3 22.34,20.69L21.63,21.4C21.24,21.79 20.61,21.79 20.22,21.4L17,18.23L14.56,20.7L13.15,19.29L15.27,17.17L3.37,5.27V2.44H6.2M15.89,10L20.63,5.26V2.44H17.8L13.06,7.18L15.89,10M10.94,15L8.11,12.13L5.9,14.34L3.78,12.22L2.37,13.63L4.84,16.1L1.66,19.29C1.27,19.68 1.27,20.31 1.66,20.7L2.37,21.41C2.76,21.8 3.39,21.8 3.78,21.41L7,18.23L9.44,20.7L10.85,19.29L8.73,17.17L10.94,15Z"></path>
                </svg>
            </a>
            <a href="https://tun-lin-phyo.web.app" target="_blank" class="custom-title" data-title="Portfolio">
                <svg xmlns="http://www.w3.org/2000/svg" id="Isolation_Mode" data-name="Isolation Mode" viewBox="0 0 24 24" width="18" height="18">
                    <path fill="currentColor" d="M7.253,24A7.251,7.251,0,0,1,2.124,11.62L6.191,7.55,8.313,9.67,4.246,13.741a4.253,4.253,0,1,0,6.016,6.014l4.068-4.068,2.121,2.121-4.068,4.068A7.229,7.229,0,0,1,7.253,24Z"/>
                    <path fill="currentColor" d="M17.808,16.452l-2.121-2.121,4.068-4.068A4.254,4.254,0,0,0,13.74,4.246L9.669,8.314,7.548,6.192l4.071-4.068a7.254,7.254,0,0,1,10.257,10.26Z"/>
                    <rect fill="currentColor" x="7.204" y="10.501" width="9.591" height="3" transform="translate(-4.971 12) rotate(-45)"/>
                </svg>
            </a>
            <a href="https://github.com/tunlinphyo" target="_blank" class="custom-title" data-title="Github">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 24 24" style="enable-background:new 0 0 24 24;" xml:space="preserve" width="18" height="18">
                    <g>
                        <path fill="currentColor" style="fill-rule:evenodd;clip-rule:evenodd;" d="M12,0.296c-6.627,0-12,5.372-12,12c0,5.302,3.438,9.8,8.206,11.387   c0.6,0.111,0.82-0.26,0.82-0.577c0-0.286-0.011-1.231-0.016-2.234c-3.338,0.726-4.043-1.416-4.043-1.416   C4.421,18.069,3.635,17.7,3.635,17.7c-1.089-0.745,0.082-0.729,0.082-0.729c1.205,0.085,1.839,1.237,1.839,1.237   c1.07,1.834,2.807,1.304,3.492,0.997C9.156,18.429,9.467,17.9,9.81,17.6c-2.665-0.303-5.467-1.332-5.467-5.93   c0-1.31,0.469-2.381,1.237-3.221C5.455,8.146,5.044,6.926,5.696,5.273c0,0,1.008-0.322,3.301,1.23   C9.954,6.237,10.98,6.104,12,6.099c1.02,0.005,2.047,0.138,3.006,0.404c2.29-1.553,3.297-1.23,3.297-1.23   c0.653,1.653,0.242,2.873,0.118,3.176c0.769,0.84,1.235,1.911,1.235,3.221c0,4.609-2.807,5.624-5.479,5.921   c0.43,0.372,0.814,1.103,0.814,2.222c0,1.606-0.014,2.898-0.014,3.293c0,0.319,0.216,0.694,0.824,0.576   c4.766-1.589,8.2-6.085,8.2-11.385C24,5.669,18.627,0.296,12,0.296z"/>
                    </g>
                </svg>
            </a>
            <a href="https://www.linkedin.com/in/tunlinphyo" target="_blank" class="custom-title" data-title="LinkedIn" data-position="tr">
                <svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" version="1.1" id="Capa_1" x="0px" y="0px" viewBox="0 0 24 24" width="20" height="20">
                    <g>
                        <path fill="currentColor" id="Path_2520" d="M17.291,19.073h-3.007v-4.709c0-1.123-0.02-2.568-1.564-2.568c-1.566,0-1.806,1.223-1.806,2.487v4.79H7.908   V9.389h2.887v1.323h0.04c0.589-1.006,1.683-1.607,2.848-1.564c3.048,0,3.609,2.005,3.609,4.612L17.291,19.073z M4.515,8.065   c-0.964,0-1.745-0.781-1.745-1.745c0-0.964,0.781-1.745,1.745-1.745c0.964,0,1.745,0.781,1.745,1.745   C6.26,7.284,5.479,8.065,4.515,8.065L4.515,8.065 M6.018,19.073h-3.01V9.389h3.01V19.073z M18.79,1.783H1.497   C0.68,1.774,0.01,2.429,0,3.246V20.61c0.01,0.818,0.68,1.473,1.497,1.464H18.79c0.819,0.01,1.492-0.645,1.503-1.464V3.245   c-0.012-0.819-0.685-1.474-1.503-1.463"/>
                    </g>
                </svg>
            </a>
        </div>
    </footer>
</section>

<script>
    const contentTitle = document.querySelector<HTMLHeadingElement>('[data-id=contentTitle]')!
    const contentList = document.querySelector<HTMLUListElement>('[data-id=contentList]')!

    contentTitle.addEventListener('click', () => {
        const status = contentList.dataset.toggle
        contentList.dataset.toggle = status === 'on' ? 'off' : 'on'
    })

    contentList.addEventListener('click', (e: Event) => {
        const target = e.target as HTMLElement
        if (target.hasAttribute('href')) {
            contentList.dataset.toggle = 'off'
        }
    })

    document.addEventListener("DOMContentLoaded", () => {
        const tocLinks = document.querySelectorAll<HTMLLinkElement>('[data-toc-link]');
        const headings = Array.from(document.querySelectorAll('h3'))
            .filter(el => el.id)

        function getActiveHeading() {
            const scrollPosition = window.scrollY;
            const viewportHeight = window.innerHeight;

            for (let i = headings.length - 1; i >= 0; i--) {
                const heading = headings[i];
                const rect = heading.getBoundingClientRect();
                const offsetTop = rect.top + scrollPosition;

                if (offsetTop < scrollPosition + (viewportHeight * 0.5)) {
                    return heading.id;
                }
            }
            return null;
        }

        function updateActiveTOC() {
            const activeId = getActiveHeading();

            tocLinks.forEach(link => {
                link.classList.toggle('active', link.getAttribute('href') === `#${activeId}`);
                link.dataset.active = link.getAttribute('href') === `#${activeId}` ? 'on' : 'off'
            });
        }

        window.addEventListener('scroll', updateActiveTOC, { passive: true });
        window.addEventListener('resize', updateActiveTOC);
        updateActiveTOC();
  });
</script>

<style>
@layer layouts {
    section {
        /* --theme-bg: light-dark(#fff, var(--gray-10)); */
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: flex-start;
        align-items: center;
        position: relative;
        z-index: 0;

        @media (min-width: 1120px) {
            display: grid;
            grid-template-columns: [edge-start article-start] 1fr [article-end table-start] minmax(180px, .3fr) [table-end edge-end];
            grid-template-rows: [body-start] auto [body-end footer-start] auto [footer-end];
            align-items: flex-start;
        }
    }

    article {
        view-transition-name: article;
        grid-area: body / article;
        width: 100%;
        display: grid;
        padding-block-end: 6vh;
        grid-template-columns: [edge-start] minmax(16px, 5vw) [body-start] 1fr [body-end] minmax(16px, 5vw) [edge-end];

        h1, h2, h3, h4, h5, h6 {
            margin-block: .5rem;
        }

        @media (min-width: 1120px) {
            grid-template-columns: 1fr [edge-start] 32px [body-start] min(700px, 90%) [body-end] 32px [edge-end] 1fr;
        }

        * ~ h1,
        * ~ h2,
        * ~ h3,
        * ~ h4,
        * ~ h5,
        * ~ h6 {
            margin-top: .5rem;
        }

        a {
            color: var(--accent-color);
            /* color: LinkText;
            text-decoration: underline;
            text-decoration-style: wavy;
            text-decoration-color: var(--accent-color); */

            &:hover {
                text-decoration: underline;
                text-decoration-style: dashed;
            }
        }

        p {
            margin-block: .5rem;
            line-height: 1.8;
            /* text-align: justify;
            text-wrap: pretty; */
            font-weight: 500;
        }

        > * {
            grid-column: body;
        }
    }

    aside {
        view-transition-name: toc;
        grid-area: body / table;

        position: sticky;
        z-index: 9;
        top: 0;
        background-color: Canvas;

        & h3 {
            font-size: 1.2rem;
            font-weight: normal;
            padding-block: var(--size-2);

            display: flex;
            justify-content: flex-start;
            align-items: center;
            gap: var(--size-1);
            color: var(--accent-color);

            @media (max-width: 1119px) {
                height: 50px;
            }

            & span {
                padding-inline-end: var(--size-1);
            }

            .arrow {
                color: GrayText;
            }
        }

        @media (max-width: 1119px) {
            width: 100%;
            padding-inline: 5vw;
            border-block-end: 1px solid ButtonFace;
            margin-block-start: 50px;

            & ul {
                position: absolute;
                left: 0;
                width: 100%;
                background-color: Canvas;
                border: none;
                border-block: 1px solid ButtonFace;
                padding-inline: 5vw;

                & a {
                    display: block;
                    padding: var(--size-1);
                }
            }

            & [data-toggle] {
                overflow: hidden;
                transition-property: display, height, padding;
                transition-duration: .3s;
                transition-behavior: allow-discrete;
            }

            & [data-toggle="off"] {
                display: none;
                height: 0;
                padding-block: 0;
            }

            & [data-toggle="on"] {
                display: block;
                height: max-content;
                padding-block: var(--size-3);

                @starting-style {
                    padding-block: 0;
                    height: 0;
                }
            }
        }

        @media (min-width: 1120px) {
            margin-block-start: 12vh;
            top: 3vh;

            & .arrow {
                display: none;
            }
        }
    }

    ul[data-id=contentList] {
        list-style: none;
        /* border-inline-start: 2px solid ButtonFace; */
        padding-block: var(--size-2);
        padding: 0;

        & a {
            color: CanvasText;
            font-size: .9rem;
            display: inline-flex;
            justify-content: flex-start;
            align-items: center;
            height: 28px;
            border-inline-start: 2px solid ButtonFace;
            border-radius: 0;
            padding-inline: var(--size-3);
            border-radius: 0 var(--radius-2) var(--radius-2) 0;
            opacity: .8;

            &[data-active=on] {
                color: CanvasText;
                border-color: var(--accent-color);
                background-color: Highlight;
                opacity: 1;
            }
        }
    }

    footer {
        grid-area: footer / edge;
        border-top: 1px solid ButtonFace;
        width: 100%;
        height: 100px;
        padding-inline: 4vw;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: var(--size-2);
        
        @media (min-width: 768px) {
            flex-direction: row;
            justify-content: space-between;
            align-items: center;
        }

        .copyright {
            color: GrayText;
            font-size: .85rem;

            & span {
                display: inline-block;
                scale: 1.3;
            }

            &:hover {
                color: CanvasText;
            }
        }

        .contacts {
            display: flex;
            justify-content: flex-end;
            align-items: center;
            gap: max(16px, 2vw);

            & a {
                color: GrayText;

                &:where(:focus-visible, :hover) {
                    color: var(--accent-color);
                }
            }
        }
    }
}
</style>