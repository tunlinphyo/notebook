---
import Nav from "./Nav.astro"
---

<dialog id="aside">
    <aside>
        <header>
            <a href="/">
                <svg viewBox="0 0 24 24">
                    <path fill="currentColor" d="m13,0h-7c-1.86,0-3.428,1.276-3.873,3H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.5v3.5H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.5v3H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.5v3H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.5v3.5H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.627c.445,1.724,2.013,3,3.873,3h7c2.206,0,4-1.794,4-4V4c0-2.206-1.794-4-4-4Zm3,20c0,1.654-1.346,3-3,3h-7c-1.654,0-3-1.346-3-3V4c0-1.654,1.346-3,3-3h7c1.654,0,3,1.346,3,3v16Zm-3-13.5c0,.276-.224.5-.5.5h-6c-.276,0-.5-.224-.5-.5s.224-.5.5-.5h6c.276,0,.5.224.5.5ZM21.5,0c-1.378,0-2.5,1.121-2.5,2.5v17.758c0,.922.374,1.823,1.025,2.475l1.121,1.121c.098.098.226.146.354.146s.256-.049.354-.146l1.121-1.121c.652-.651,1.025-1.553,1.025-2.475V2.5c0-1.379-1.122-2.5-2.5-2.5Zm1.5,20.258c0,.658-.267,1.303-.732,1.768l-.768.768-.768-.768c-.465-.465-.732-1.109-.732-1.768V2.5c0-.827.673-1.5,1.5-1.5s1.5.673,1.5,1.5v17.758Z"/>
                </svg>
                <h1>
                    <span>Note</span>
                    <span>Book</span>
                </h1>
            </a>
            <button id="gotoMain" data-button>Go to Main Content</button>
        </header>
        <Nav />
        <footer>
            <small>
                <span>&copy;</span>
                2025
            </small>
        </footer>
    </aside>
</dialog>

<button data-button type="button" id="asideToggle">
    <svg viewBox="0 0 24 24" width="32" height="32z">
        <path fill="currentColor" d="m13,0h-7c-1.86,0-3.428,1.276-3.873,3H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.5v3.5H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.5v3H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.5v3H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.5v3.5H.5c-.276,0-.5.224-.5.5s.224.5.5.5h1.627c.445,1.724,2.013,3,3.873,3h7c2.206,0,4-1.794,4-4V4c0-2.206-1.794-4-4-4Zm3,20c0,1.654-1.346,3-3,3h-7c-1.654,0-3-1.346-3-3V4c0-1.654,1.346-3,3-3h7c1.654,0,3,1.346,3,3v16Zm-3-13.5c0,.276-.224.5-.5.5h-6c-.276,0-.5-.224-.5-.5s.224-.5.5-.5h6c.276,0,.5.224.5.5ZM21.5,0c-1.378,0-2.5,1.121-2.5,2.5v17.758c0,.922.374,1.823,1.025,2.475l1.121,1.121c.098.098.226.146.354.146s.256-.049.354-.146l1.121-1.121c.652-.651,1.025-1.553,1.025-2.475V2.5c0-1.379-1.122-2.5-2.5-2.5Zm1.5,20.258c0,.658-.267,1.303-.732,1.768l-.768.768-.768-.768c-.465-.465-.732-1.109-.732-1.768V2.5c0-.827.673-1.5,1.5-1.5s1.5.673,1.5,1.5v17.758Z"/>
    </svg>
</button>

<script>
    const dialogEl = document.getElementById('aside') as HTMLDialogElement
    const toggle = document.getElementById('asideToggle') as HTMLButtonElement
    const goto = document.getElementById('gotoMain') as HTMLButtonElement
    dialogEl.addEventListener('click', (e: Event) => {
        const target = e.target as HTMLElement
        if (target == dialogEl || target.dataset.nav) {
            dialogEl.close()
        }
    })
    toggle.addEventListener('click', () => {
        dialogEl.showModal()
    })
    goto.addEventListener('click', () => {
        if (dialogEl.open) dialogEl.close()
        focusFirstInMain()
    })

    function focusFirstInMain() {
        const main = document.querySelector('#mainContent');
        if (!main) return;

        // Common focusable selectors
        const focusables = main.querySelectorAll(
            'a[href], button:not([disabled]), textarea:not([disabled]), input:not([disabled]), select:not([disabled]), [tabindex]:not([tabindex="-1"])'
        );

        const first = focusables[0] as HTMLElement;
        if (first) first.focus();
        }
</script>

<style>
@layer layouts {
    #asideToggle {
        width: var(--size-9);
        aspect-ratio: 1;
        box-shadow: var(--shadow-3);
        border-radius: var(--radius-blob-4);
        background-color: light-dark(#fff, var(--gray-8));
        color: light-dark(var(--gray-10), var(--gray-3));
        color: light-dark(var(--green-7), var(--green-4));
        border: none;

        position: fixed;
        z-index: calc(infinity);
        top: var(--size-3);
        right: var(--size-3);

        display: flex;
        justify-content: center;
        align-items: center;

        transition: scale 1s var(--ease-spring-2);

        @media (min-width: 992px) {
            display: none;
        }
    }

    dialog {
        border: none;
        padding: 0;
        --header-height: 100px;
        background-color: light-dark(#fff, var(--gray-8));

        @media (max-width: 991px) {
            --duration: 1s;
            width: 90%;
            height: calc(100% - var(--size-4));
            max-width: var(--size-14);
            margin: var(--size-2);
            border-radius: var(--radius-3);
            box-shadow: var(--shadow-6);

            position: fixed;
            z-index: calc(infinity);

            translate: -110% 0;

            &, &::backdrop {
                transition: display var(--duration), translate var(--duration) var(--ease-spring-2), opacity var(--duration);
                transition-behavior: allow-discrete;
            }

            &::backdrop {
                opacity: 0;
            }

            &[open] {
                display: grid;
                translate: 0 0;

                &::backdrop {
                    opacity: 1;
                }
            }

            @starting-style {
                &[open] {
                    translate: -110% 0;
                }
                &[open]::backdrop {
                    opacity: 0;
                }
            }
        }

        @media (min-width: 992px) {
            display: grid;
            margin: 0;
            padding: 0;
            position: sticky;
            top: 0;
            block-size: 100dvh;
            max-block-size: 100dvh;
            min-inline-size: 30ch;
            box-shadow: none;
            overflow-y: auto;

            grid-template-columns: 1fr;
            grid-template-rows: auto 1fr;
        }

    }

    dialog[open] + button {
        scale: 0;
    }

    header {
        width: 100%;
        height: var(--header-height);
        display: flex;
        justify-content: flex-start;
        align-items: center;
        padding: 0 var(--size-3);
        border-block-end: var(--border-size-1) solid light-dark(var(--gray-2), var(--gray-7));

        position: sticky;
        z-index: 1;
        background-color: light-dark(#fff, var(--gray-9));
        top: 0;

        & a {
            display: flex;
            gap: var(--size-1);
            text-decoration: none;
            border-radius: var(--radius-2);

            cursor: pointer;
            outline: 2px solid transparent;
            outline-offset: -2px;
            transition: outline-offset .5s var(--ease-spring-1);

            &:focus {
                outline-color: var(--secondary);
                outline-offset: 6px;
            }
            & svg {
                height: 56px;
                color: var(--gray-6);
            }
        }

        h1 {
            display: block;
            & span {
                display: block;
                color: light-dark(var(--gray-7), var(--gray-3));
                font-size: 1.6rem;
                font-weight: 900;
                line-height: 1;

                &:last-child {
                    color: light-dark(var(--green-7), var(--green-4));
                    font-weight: 200;
                    font-size: 2rem;
                }
            }
        }
    }

    footer {
        width: 100%;
        height: 32px;
        display: flex;
        justify-content: center;
        align-items: center;
        padding: 0 var(--size-3);
        border-block-start: var(--border-size-1) solid light-dark(var(--gray-2), var(--gray-7));

        position: sticky;
        z-index: 1;
        background-color: light-dark(#fff, var(--gray-9));
        bottom: 0;

        & small {
            display: flex;
            gap: var(--size-1);
            color: var(--gray-6);

            & span {
                scale: 1.2;
            }
        }
    }

    #gotoMain {
        position: absolute;
        right: var(--size-3);
        border: none;
        border-radius: var(--radius-drawn-4);
        background-color: light-dark(var(--gray-1), var(--gray-8));
        box-shadow: var(--shadow-3);
        pointer-events: none;
        opacity: 0;

        &:focus {
            pointer-events: auto;
            opacity: 1;
        }
    }
}
</style>